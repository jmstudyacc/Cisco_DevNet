Common types of authentication mechanisms include:

    Basic Authentication
    Bearer Authentication
    API Key

Basic authentication:
---------------------
Basic Authentication, also known as Basic Auth, uses the standard Basic HTTP authentication scheme. 
Basic Auth transmits credentials as username/password pairs separated with a colon ( : ) and encoded using Base64.
In a REST API request, the Basic Auth information will be provided in the header:

​ Authorization: Basic <username>:<password>

Basic Auth is considered the simplest authentication mechanism, but it is extremely insecure unless it is paired with requests using HTTPS rather than HTTP. 
Although the credentials are encoded, they are not encrypted and it's simple to decode the credentials and get the username/password pair.

Bearer authentication:
----------------------
Bearer Authentication, also known as Token Authentication, uses the standard Bearer HTTP authentication scheme. 
It is more secure than Basic Authentication and is typically used with OAuth (to be discussed later) and Single Sign-On (SSO). 
Bearer Authentication uses a bearer token, which is a string generated by an authentication server such as an Identity Service (IdS).
In a REST API request, the Bearer Auth information will be provided in the header:

​ Authorization: Bearer <bearer token>

Just like Basic Authentication, Bearer Authentication should be used with HTTPS.

API key:
--------
An API key, also referred to as an API Token, is a unique alphanumeric string generated by the server and assigned to a user. To obtain their unique API key, the user typically logs into a portal using their credentials. 
This key is usually assigned once and will not be regenerated. All REST API requests for this user must provide the assigned API key as the form of authentication.

Just as with the other types of authentication, API keys are only secure when used with HTTPS.
API keys are intended to be an authentication mechanism, but are commonly misused as an authorization mechanism.

There are two types of API keys:

    Public API key
    Private API key

While a public API key can be shared and enables that user to access a subset of data and APIs, you must not share a private key, because it's similar to a user's username and password. 
Most API keys do not expire, so unless the key can be revoked or regenerated, if the assigned key is distributed or compromised, anyone with that key can access the system as you — indefinitely.

A REST API request can provide an API key in a few different ways:

    Query string: 
            # Only recommended for public API keys

            GET http://localhost:8080/v1/books?API_KEY=YOUR_KEY_HERE

    Header: 
            # Uses the Authorization key or a custom key

    Authorization: 
            # <API Key> | or | Authorization: APIkey <API Key> | or | APIkey: <API Key>

    Body data: 
            #Uses a unique key as the identifier

    Content-Type: 
            # application/json

                {
                    API_KEY: <API Key>
                }
                ...

    Cookie: 
            # Uses a unique key as the identifier

                Cookie: API_KEY=<API Key>