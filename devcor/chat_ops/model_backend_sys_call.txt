@startuml
actor User
participant "Webex Teams Client" as wtc
participant "Webex Teams Chatbot App" as wtca
participant "ChatsOps Gateway" as cg
participant "Meraki API" as ma

'1 - user sends message to webex teams client, this is a Synchronous call so it activates the user's lifeline - user expects feedback & activates before message sends
activate User
User -> wtc ++: Write message

'2 - when client detects user input the message is relayed to relevant room on Webex Teams - briefly activates ChatBot App lifeline as it responds 200 OK'
wtc -> wtca++: POST https://api.webexteams.com/messages
wtca --> wtc --: HTTP 200 OK
deactivate wtc

'3 - when wtca detects new message, webhook subscribed to room is triggered with POST sent to event handler of cg, cg lifeline is activated as cg is performing action'
wtca -\\ cg++: POST https://cg.webexteams.com/events

'4 - handle event - 1st handle event sent to cg, valid = 200 or 204 (no content) - YOU SHOULD ALSO INCLUDE INVALID EVENT HANDLING'
alt Empty Event
	cg --\\ wtca: HTTP 204 No Content
else Valid Event
	cg --\\ wtca: HTTP 200 OK

'5 - read the extra message data - events do not contain message data, only refs. and IDs of users + resources so data must be read by GET request to wtca'
' extra API call mus tbe made to Webex Cloud for a message & a user'
	cg -> wtca++: GET https://api.webexteams.com/messages
	wtca --> cg: HTTP 200 OK
	deactivate wtca

'6 - create a new SSID via Meraki API'
	cg -> ma++: POST https://api.meraki.com
	ma --> cg: HTTP 200 OK
	deactivate ma

'7 - notify the user - start, send POST request to wtca which will post a new message to the Webex Teams room
'wtc is notified about new messages asynchronously by listening for new events via a web socket via wtca notifying
'user sees message displayed
	cg -> wtca ++: POST https://api.webexteams.com/messages
	wtca --> cg : HTTP 200 OK
	deactivate cg
	end

' 8 - close off the final lifelines after displaying the message'
wtca -\\ wtc --: Notify User
wtc -\\ User: Display message
deactivate User